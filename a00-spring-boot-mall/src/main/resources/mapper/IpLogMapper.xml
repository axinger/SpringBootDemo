<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ax.mall.mapper.IpLogMapper">

    <!--
    eviction: 回收策略,FIFO先进先出,LRU最近最少使用
    flushInterval 刷新间隔,多长时间清空一次

    -->
        <cache type="com.ax.mall.cache.MybatisRedisCache" flushInterval="6000" size="512" readOnly="true">


        </cache>


    <resultMap id="BaseResultMap" type="com.ax.mall.entity.IpLog">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="login_time" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="login_state" property="loginState" jdbcType="INTEGER"/>
        <result column="user_type" property="userType" jdbcType="INTEGER"/>
        <result column="user_info_id" property="userinfoId" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_name, login_time, ip, login_state, user_type, user_info_id
    </sql>

    <!--    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">-->
    <!--        select-->
    <!--        <include refid="Base_Column_List"/>-->
    <!--        from t_ip_log-->
    <!--        where id = #{id}-->
    <!--    </select>-->

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select *
        from t_ip_log
        where id = #{id}
    </select>


    <!--动态sql-->
    <!--  if test=" 不要 前缀 test="log.user_name-->
    <select id="selectIfParam" resultMap="BaseResultMap" parameterType="com.ax.mall.entity.IpLog">
        select
        <include refid="Base_Column_List"/>
        from t_ip_log

        <!-- where标签，会将第一个and过滤（不会过滤第二个）-->
        <where>
            <if test="userName != null and userName != ''">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>

            <if test="loginState == 0 || loginState == 1">
                and login_state = #{loginState}
            </if>
        </where>

    </select>


    <select id="selectChoose" parameterType="com.ax.mall.entity.IpLog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_ip_log
        <where>
            <choose>
                <when test="id!=null">
                    id=#{id}
                </when>
                <when test="userName != null and userName != ''">
                    user_name = #{userName}
                </when>

                <otherwise>
                    1=1
                </otherwise>
            </choose>
        </where>

    </select>

    <!--foreach 遍历集合-->
    <!--    <select id="selectByIdList" parameterType="java.util.List" resultMap="BaseResultMap">-->

    <select id="selectByIdList" parameterType="java.util.List" resultType="com.ax.mall.entity.IpLog">


        select
        <include refid="Base_Column_List"/>
        from t_ip_log where id
        in

        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_ip_log
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.ax.mall.entity.IpLog" useGeneratedKeys="true" keyProperty="id">
        insert into t_ip_log (user_name, login_time, ip,
                              login_state, user_type, user_info_id)
        values (#{userName,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR},
                #{loginState,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER}, #{userinfoId,jdbcType=BIGINT})
    </insert>

    <!--动态sql if -->
    <insert id="insertSelective" parameterType="com.ax.mall.entity.IpLog" useGeneratedKeys="true" keyProperty="id">
        insert into t_ip_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="loginTime != null">
                login_time,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="loginState != null">
                login_state,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="userinfoId != null">
                user_info_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="loginState != null">
                #{loginState,jdbcType=INTEGER},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="userinfoId != null">
                #{userinfoId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.ax.mall.entity.IpLog">
        update t_ip_log

        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="loginState != null">
                login_state = #{loginState,jdbcType=INTEGER},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=INTEGER},
            </if>
            <if test="userinfoId != null">
                user_info_id = #{userinfoId,jdbcType=BIGINT},
            </if>
        </set>

        <!--        <trim prefix="set" suffixOverrides=",">-->
        <!--            <if test="userName != null">-->
        <!--                user_name = #{userName,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="loginTime != null">-->
        <!--                login_time = #{loginTime,jdbcType=TIMESTAMP},-->
        <!--            </if>-->
        <!--            <if test="ip != null">-->
        <!--                ip = #{ip,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="loginState != null">-->
        <!--                login_state = #{loginState,jdbcType=INTEGER},-->
        <!--            </if>-->
        <!--            <if test="userType != null">-->
        <!--                user_type = #{userType,jdbcType=INTEGER},-->
        <!--            </if>-->
        <!--            <if test="userinfoId != null">-->
        <!--                user_info_id = #{userinfoId,jdbcType=BIGINT},-->
        <!--            </if>-->
        <!--        </trim>-->


        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ax.mall.entity.IpLog">
        update t_ip_log
        set user_name    = #{userName,jdbcType=VARCHAR},
            login_time   = #{loginTime,jdbcType=TIMESTAMP},
            ip           = #{ip,jdbcType=VARCHAR},
            login_state  = #{loginState,jdbcType=INTEGER},
            user_type    = #{userType,jdbcType=INTEGER},
            user_info_id = #{userinfoId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="base_query">

        <where>
            <if test="beginDate!=null">
                AND login_time &gt;=#{beginDate}
            </if>

            <if test="endDate!=null">
                AND login_time &lt;=#{endDate}
            </if>

            <if test="userName!=null and like">
                AND userName LIKE '%${userName}%'
            </if>

            <if test="userName!=null and !like">
                AND user_name = #{userName}
            </if>

            <if test="userType>-1">
                AND user_type = #{userType}
            </if>

        </where>

    </sql>


    <!--分页查询 个数-->
    <select id="queryForCount" resultType="int">
        SELECT COUNT(id) FROM t_ip_log
        <include refid="base_query"/>
    </select>


    <!--分页查询 内容-->
    <select id="query" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_ip_log
        <include refid="base_query"/>

        ORDER BY login_time DESC

        <!--<if test="pageSize>-1">-->
        <!--LIMIT #{start},#{pageSize}-->
        <!--</if>-->

    </select>


    <select id="queryPage" resultMap="BaseResultMap" parameterType="com.ax.mall.query.IpLogQueryObject">
        SELECT *
        FROM t_ip_log
        <include refid="base_query"/>
    </select>

    <select id="findByPageInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_ip_log
    </select>


    <select id="findByPage" resultType="com.ax.mall.entity.IpLog">
        select
        <include refid="Base_Column_List"/>
        from t_ip_log
    </select>


    <!--动态sql-->
    <delete id="deleteByIdList" parameterType="java.util.List">
        delete from t_ip_log where id
        in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteById">

    </delete>


    <insert id="insertList" parameterType="List">
        insert into t_ip_log
        (user_name,
        login_time,
        ip,
        login_state,
        user_type,
        user_info_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userName},
            #{item.loginTime},
            #{item.ip},
            #{item.loginState},
            #{item.userType},
            #{item.userinfoId})
        </foreach>
    </insert>


    <update id="updateByList" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update t_ip_log
            <set>

                userName=#{item.userName,jdbcType=VARCHAR},
                loginTime=#{item.loginTime,jdbcType=TIMESTAMP},
                ip=#{item.ip,jdbcType=VARCHAR},
                loginState=#{item.loginState,jdbcType=INTEGER},
                userType=#{item.userType,jdbcType=INTEGER},
                userinfoId=#{item.userinfoId,jdbcType=BIGINT}

            </set>
            <where>
                id = #{item.id,jdbcType=BIGINT}
            </where>
        </foreach>
    </update>


    <!-- 批量更新第二种方法，通过 case when语句变相的进行批量更新 -->
    <update id="updateByListWhen" parameterType="java.util.List">
        update t_ip_log
        <trim prefix="set" suffixOverrides=",">

            <!-- 拼接case when 这是另一种写法，这种写着更专业的感觉 -->
            <trim prefix="userName =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.userName!=null">
                        when id=#{item.id} then #{item.userName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="loginTime =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.loginTime!=null">
                        when id=#{item.id} then #{item.loginTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ip =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.ip!=null">
                        when id=#{item.id} then #{item.ip}
                    </if>
                </foreach>
            </trim>
            <trim prefix="loginState =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.loginState!=null">
                        when id=#{item.id} then #{item.loginState}
                    </if>
                </foreach>
            </trim>
            <trim prefix="userType =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.userType!=null">
                        when id=#{item.id} then #{item.userType}
                    </if>
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="list" separator="or" item="item">
                id = #{item.id}
            </foreach>
        </where>
    </update>


</mapper>